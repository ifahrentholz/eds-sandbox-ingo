{"version":3,"file":"main.js","sources":["../../src/utils/addClasses.ts","../../src/app/tasks/decorateTemplateAndTheme.ts","../../src/utils/undefinedOnEmpty.ts","../../src/app/tasks/setDocLanguage.ts","../../src/helpers/sidekick/getLocation.ts","../../config.ts","../../src/app/tasks/loadFonts.ts","../../src/app/tasks/sampleRUM.ts","../../src/app/tasks/waitForLCP.ts","../../src/app/tasks/showSection.ts","../../src/app/tasks/loadSection.ts","../../src/app/tasks/loadSections.ts","../../src/app/tasks/setupHlxObj.ts","../../src/app/index.ts","../../src/app/init.ts","../../src/main.ts"],"sourcesContent":["import { toClassName } from 'Utils/toClassName';\n\n/**\n * Adds CSS classes to an HTML element.\n *\n * @param {HTMLElement} element - The HTML element to which classes will be added.\n * @param {string} classes - A string containing CSS classes separated by commas.\n *\n * @example\n * const element = document.getElementById('myElement');\n * const classesToAdd = 'class1, class2, class3';\n * addClasses(element, classesToAdd);\n */\nexport const addClasses = (element: HTMLElement, classes: string): void => {\n  classes.split(',').forEach((cssClass: string): void => {\n    element.classList.add(toClassName(cssClass.trim()));\n  });\n};\n","import { addClasses } from '../../utils/addClasses';\nimport { getMetadata } from '../../utils/getMetadata';\n\n/**\n * Decorates the template and theme by adding classes to the body.\n * The classes are defined in the meta tags of the document.\n * Usefull for styling the page based on the template and theme meta tags\n * that can be set in the metadata table in EDS.\n * @example\n * <meta name=\"template\" content=\"template-name\">\n * <meta name=\"theme\" content=\"theme-name\">\n * @example\n * <body class=\"template-name theme-name\">\n */\nexport function decorateTemplateAndTheme() {\n  const template = getMetadata('template');\n  if (template) addClasses(document.body, template);\n  const theme = getMetadata('theme');\n  if (theme) addClasses(document.body, theme);\n}\n","/**\n * Returns undefined if the value is an empty string, otherwise returns the value itself.\n *\n * @param {string} value - The value to check.\n * @returns {string | undefined} - If the value is an empty string, returns undefined\n * otherwise, returns the value itself.\n *\n * @example\n * // Example usage:\n * const emptyValue = '';\n * const nonEmptyValue = 'Hello, World!';\n *\n * const result1 = undefinedOnEmpty(emptyValue);\n * console.log(result1); // Output: undefined\n *\n * const result2 = undefinedOnEmpty(nonEmptyValue);\n * console.log(result2); // Output: 'Hello, World!'\n */\nexport function undefinedOnEmpty(value: string): string | undefined {\n  return value.trim() === '' ? undefined : value;\n}\n","import { getMetadata } from '../../utils/getMetadata';\nimport { undefinedOnEmpty } from '../../utils/undefinedOnEmpty';\n\n/*\n * This function sets the language of the document based on the language metadata.\n */\nexport function setDocLanguage() {\n  const lang = getMetadata('language');\n  document.documentElement.lang = undefinedOnEmpty(lang) || 'en';\n}\n","import { isSidekickLibraryActive } from './isSidekickLibraryActive';\n\n/**\n * Returns the true origin of the current page in the browser.\n * If the page is running in an iframe with srcdoc, the query param is returned.\n * @returns {String} The query param of the current page or the query param of the block running in the library\n *\n * @example\n * const searchParams = new URLSearchParams(getLocation().search);\n *\n * @remarks\n * Needs to be used when the Sidekick Library Plugin is in use.\n */\nexport function getLocation(): Location {\n  return isSidekickLibraryActive() ? window.parent.location : window.location;\n}\n","export interface Config {\n  mainTsPath: string;\n  mainScssPath: string;\n  iconsDirPath: string;\n  iconsTypesPath: string;\n  fontsScssPath?: string;\n  fontsCssPath?: string;\n  lazyStylesScssPath?: string;\n  lazyStylesCssPath?: string;\n  sidekickLibraryStylesScssPath?: string;\n  sidekickLibraryStylesCssPath?: string;\n  editorTsPath: string;\n  lcpBlocks?: string[];\n}\n\nexport const config: Config = {\n  mainTsPath: './src/main.ts',\n  mainScssPath: './src/styles/sass/main.scss',\n  iconsDirPath: './public/icons',\n  iconsTypesPath: './src/types/icons.types.ts',\n  fontsScssPath: './src/styles/sass/fonts.scss',\n  fontsCssPath: './dist/fonts/fonts.css',\n  lazyStylesScssPath: './src/styles/sass/lazy-styles.scss',\n  lazyStylesCssPath: './dist/lazyStyles/lazyStyles.css',\n  editorTsPath: './src/app/editor/editor-support.ts',\n  lcpBlocks: [],\n};\n","import { DebuggerService } from '@kluntje/services';\n\nimport { getLocation } from 'Helpers/sidekick/getLocation';\n\nimport { loadCSS } from './loadCSS';\nimport { config } from '../../../config';\n\nexport async function loadFonts(): Promise<void> {\n  const { fontsCssPath } = config;\n  if (!fontsCssPath) return;\n  await loadCSS(fontsCssPath);\n  try {\n    if (!getLocation().hostname.includes('localhost')) sessionStorage.setItem('fonts-loaded', 'true');\n  } catch (error) {\n    DebuggerService.error('loadFonts: Error setting fonts-loaded in session storage', error);\n  }\n}\n","// @ts-nocheck\n/* eslint-disable -- Adobe code */\nexport function sampleRUM(checkpoint, data) {\n  const timeShift = () => (window.performance ? window.performance.now() : Date.now() - window.hlx.rum.firstReadTime);\n  try {\n    window.hlx = window.hlx || {};\n\n    sampleRUM.enhance = () => {};\n    if (!window.hlx.rum) {\n      const weight =\n        (window.SAMPLE_PAGEVIEWS_AT_RATE === 'high' && 10) ||\n        (window.SAMPLE_PAGEVIEWS_AT_RATE === 'low' && 1000) ||\n        (new URLSearchParams(window.location.search).get('rum') === 'on' && 1) ||\n        100;\n      const id = Math.random().toString(36).slice(-4);\n      const isSelected = Math.random() * weight < 1;\n      // eslint-disable-next-line object-curly-newline, max-len\n      window.hlx.rum = {\n        weight,\n        id,\n        isSelected,\n        firstReadTime: window.performance ? window.performance.timeOrigin : Date.now(),\n        sampleRUM,\n        queue: [],\n        collector: (...args) => window.hlx.rum.queue.push(args),\n      };\n      if (isSelected) {\n        const dataFromErrorObj = (error) => {\n          const errData = { source: 'undefined error' };\n          try {\n            errData.target = error.toString();\n            errData.source = error.stack\n              .split('\\n')\n              .filter((line) => line.match(/https?:\\/\\//))\n              .shift()\n              .replace(/at ([^ ]+) \\((.+)\\)/, '$1@$2')\n              .replace(/ at /, '@')\n              .trim();\n          } catch (err) {\n            /* error structure was not as expected */\n          }\n          return errData;\n        };\n\n        window.addEventListener('error', ({ error }) => {\n          const errData = dataFromErrorObj(error);\n          sampleRUM('error', errData);\n        });\n\n        window.addEventListener('unhandledrejection', ({ reason }) => {\n          let errData = {\n            source: 'Unhandled Rejection',\n            target: reason || 'Unknown',\n          };\n          if (reason instanceof Error) {\n            errData = dataFromErrorObj(reason);\n          }\n          sampleRUM('error', errData);\n        });\n\n        sampleRUM.baseURL = sampleRUM.baseURL || new URL(window.RUM_BASE || '/', new URL('https://rum.hlx.page'));\n        sampleRUM.collectBaseURL = sampleRUM.collectBaseURL || sampleRUM.baseURL;\n        sampleRUM.sendPing = (ck, time, pingData = {}) => {\n          // eslint-disable-next-line max-len, object-curly-newline\n          const rumData = JSON.stringify({\n            weight,\n            id,\n            referer: window.location.href,\n            checkpoint: ck,\n            t: time,\n            ...pingData,\n          });\n          const { href: url, origin } = new URL(`.rum/${weight}`, sampleRUM.collectBaseURL);\n          const body = origin === window.location.origin ? new Blob([rumData], { type: 'application/json' }) : rumData;\n          navigator.sendBeacon(url, body);\n          // eslint-disable-next-line no-console\n          console.debug(`ping:${ck}`, pingData);\n        };\n        sampleRUM.sendPing('top', timeShift());\n\n        sampleRUM.enhance = () => {\n          const script = document.createElement('script');\n          script.src = new URL('.rum/@adobe/helix-rum-enhancer@^2/src/index.js', sampleRUM.baseURL).href;\n          document.head.appendChild(script);\n        };\n        if (!window.hlx.RUM_MANUAL_ENHANCE) {\n          sampleRUM.enhance();\n        }\n      }\n    }\n    if (window.hlx.rum && window.hlx.rum.isSelected && checkpoint) {\n      window.hlx.rum.collector(checkpoint, data, timeShift());\n    }\n    document.dispatchEvent(new CustomEvent('rum', { detail: { checkpoint, data } }));\n  } catch (error) {\n    // something went wrong\n  }\n}\n","import { LcpCandidate } from '../app.types';\n\n/**\n * Wait for the Largest Contentful Paint (LCP) candidate to be loaded.\n * This function will load the modules and styles for the first section after the LCP candidate.\n * @returns {Promise<void>}\n */\nexport async function waitForLCP() {\n  const lcpCandidate = document.querySelector<LcpCandidate>('main img');\n\n  await new Promise<void>((resolve) => {\n    if (lcpCandidate && !lcpCandidate.complete) {\n      lcpCandidate.setAttribute('loading', 'eager');\n      lcpCandidate.setAttribute('fetchpriority', 'high');\n      lcpCandidate.addEventListener('load', () => resolve());\n      lcpCandidate.addEventListener('error', () => resolve());\n    } else {\n      resolve();\n    }\n  });\n}\n","/**\n * Removes the display property from the section\n * @param {HTMLElement} section - The section to show\n */\nexport function showSection(section: HTMLElement) {\n  section.style.removeProperty('display');\n}\n","import { loadBlock } from './loadBlock';\nimport { showSection } from './showSection';\n\n/**\n * Loads all blocks in a section.\n * @param {HTMLDivElement} section The section element\n * @param {function(HTMLDivElement): void | Promise<void>} loadCallback The load callback function\n */\nexport async function loadSection(\n  section: HTMLDivElement,\n  loadCallback?: (HTMLDivElement) => void | Promise<void>\n): Promise<void> {\n  const status = section.dataset.sectionStatus;\n  if (!status || status === 'initialized') {\n    section.dataset.sectionStatus = 'loading';\n    const blocks = [...section.querySelectorAll<HTMLDivElement>('div.block')];\n    for (let i = 0; i < blocks.length; i += 1) {\n      // eslint-disable-next-line no-await-in-loop\n      await loadBlock(blocks[i]);\n    }\n    if (loadCallback) await loadCallback(section);\n    section.dataset.sectionStatus = 'loaded';\n    showSection(section);\n  }\n}\n","import { loadSection } from './loadSection';\nimport { showSection } from './showSection';\n/**\n * Loads all sections.\n * @param {Element} parentEl The parent element of sections to load\n */\n\nexport async function loadSections(parentEl: HTMLElement | null): Promise<void> {\n  if (!parentEl) return;\n  const sections = [...parentEl.querySelectorAll<HTMLDivElement>('div.section')];\n  for (let i = 0; i < sections.length; i += 1) {\n    // eslint-disable-next-line no-await-in-loop\n    await loadSection(sections[i]);\n    showSection(sections[i]);\n  }\n}\n","import { DebuggerService } from '@kluntje/services';\n\nexport default function setupHlxObj(mainScriptPath = '/dist/main/main.js') {\n  window.hlx = window.hlx || {};\n  window.hlx.RUM_MASK_URL = 'full';\n  window.hlx.RUM_MANUAL_ENHANCE = true;\n  window.hlx.codeBasePath = '';\n  window.hlx.lighthouse = new URLSearchParams(window.location.search).get('lighthouse') === 'on';\n\n  const scriptEl = document.querySelector(`script[src$=\"${mainScriptPath}\"]`) as HTMLScriptElement;\n  if (scriptEl) {\n    try {\n      [window.hlx.codeBasePath] = new URL(scriptEl.src).pathname.split(mainScriptPath);\n    } catch (error) {\n      DebuggerService.log('setupHlxObj: Could not set codeBasePath.', error);\n    }\n  }\n}\n","import { DebuggerService } from '@kluntje/services';\n\nimport { decorateTemplateAndTheme } from './tasks/decorateTemplateAndTheme';\nimport { decorateButtons } from './tasks/decorateButtons';\nimport { setDocLanguage } from './tasks/setDocLanguage';\nimport { loadFonts } from './tasks/loadFonts';\nimport { loadCSS } from './tasks/loadCSS';\nimport { config } from '../../config';\nimport { transformSections } from './tasks/transformSections';\nimport { decorateBlocks } from './tasks/decorateBlocks';\nimport { sampleRUM } from './tasks/sampleRUM';\nimport { waitForLCP } from './tasks/waitForLCP';\nimport { loadSections } from './tasks/loadSections';\nimport setupHlxObj from './tasks/setupHlxObj';\n\nclass HLX {\n  private beforeEagerCallbacks: Array<() => Promise<void>> = [];\n  private loadEagerCallbacks: Array<() => Promise<void>> = [];\n  private beforeLoadLazyCallbacks: Array<() => Promise<void>> = [];\n  private loadLazyCallbacks: Array<() => Promise<void>> = [];\n  private beforeLoadDelayedCallbacks: Array<() => Promise<void>> = [];\n  private loadDelayedCallbacks: Array<() => Promise<void>> = [];\n  private initializedCallbacks: Array<() => Promise<void>> = [];\n\n  private beforeEagerPromise?: Promise<void>;\n  private eagerPromise?: Promise<void>;\n  private beforeLazyPromise?: Promise<void>;\n  private lazyPromise?: Promise<void>;\n  private beforeDelayedPromise?: Promise<void>;\n  private delayedPromise?: Promise<void>;\n  private initializedPromise?: Promise<void>;\n\n  private get beforeEager() {\n    if (this.beforeEagerPromise === undefined) {\n      this.beforeEagerPromise = this.beforeLoadEager();\n    }\n    return this.beforeEagerPromise;\n  }\n\n  private get loadEager() {\n    if (this.eagerPromise === undefined) {\n      this.eagerPromise = this.loadEagerPromise();\n    }\n    return this.eagerPromise;\n  }\n\n  private get beforeLoadLazy() {\n    if (this.beforeLazyPromise === undefined) {\n      this.beforeLazyPromise = this.beforeLoadLazyPromise();\n    }\n    return this.beforeLazyPromise;\n  }\n\n  private get loadLazy() {\n    if (this.lazyPromise === undefined) {\n      this.lazyPromise = this.loadLazyPromise();\n    }\n    return this.lazyPromise;\n  }\n\n  private get beforeLoadDelayed() {\n    if (this.beforeDelayedPromise === undefined) {\n      this.beforeDelayedPromise = this.beforeLoadDelayedPromise();\n    }\n    return this.beforeDelayedPromise;\n  }\n\n  private get loadDelayed() {\n    if (this.delayedPromise === undefined) {\n      this.delayedPromise = this.loadDelayedPromise();\n    }\n    return this.delayedPromise;\n  }\n\n  private get initialized() {\n    if (this.initializedPromise === undefined) {\n      this.initializedPromise = this.getInitializedPromise();\n    }\n    return this.initializedPromise;\n  }\n\n  public addBeforeEagerTask(cb: () => Promise<void>) {\n    this.beforeEagerCallbacks.push(cb);\n  }\n\n  public addLoadEagerTask(cb: () => Promise<void>) {\n    this.loadEagerCallbacks.push(cb);\n  }\n\n  public addBeforeLoadLazyTask(cb: () => Promise<void>) {\n    this.beforeLoadLazyCallbacks.push(cb);\n  }\n\n  public addLoadLazyTask(cb: () => Promise<void>) {\n    this.loadLazyCallbacks.push(cb);\n  }\n\n  public addBeforeLoadDelayedTask(cb: () => Promise<void>) {\n    this.beforeLoadDelayedCallbacks.push(cb);\n  }\n\n  public addLoadDelayedTask(cb: () => Promise<void>) {\n    this.loadDelayedCallbacks.push(cb);\n  }\n\n  public addInitializedTask(cb: () => Promise<void>) {\n    this.initializedCallbacks.push(cb);\n  }\n\n  public async init() {\n    await this.beforeEager;\n    await this.loadEager;\n    await this.beforeLoadLazy;\n    await this.loadLazy;\n    await this.beforeLoadDelayed;\n    await this.loadDelayed;\n    await this.initialized;\n  }\n\n  private async beforeLoadEager(): Promise<void> {\n    const beforeLoadEagerTask: Promise<void> = new Promise((resolve) => {\n      setupHlxObj();\n      // @ts-ignore\n      sampleRUM();\n      decorateTemplateAndTheme();\n      setDocLanguage();\n      resolve();\n    });\n\n    await Promise.all([...this.beforeEagerCallbacks.map((cb) => cb()), beforeLoadEagerTask]);\n  }\n\n  private async loadEagerPromise(): Promise<void> {\n    // eslint-disable-next-line no-async-promise-executor, @typescript-eslint/no-misused-promises\n    const loadEagerTask = new Promise<void>(async (resolve) => {\n      try {\n        const main = document.querySelector('main') as HTMLElement;\n        decorateButtons(main);\n        transformSections(main);\n        decorateBlocks(main);\n        setTimeout(() => {\n          document.body.classList.add('show');\n          resolve();\n        }, 100);\n        // @ts-ignore\n        sampleRUM.enhance();\n\n        /* if desktop (proxy for fast connection) or fonts already loaded, load fonts.css */\n        if (window.innerWidth >= 900 || sessionStorage.getItem('fonts-loaded')) {\n          await loadFonts();\n        }\n      } catch (error) {\n        DebuggerService.error('index: could not load fonts', error);\n      }\n    });\n\n    await Promise.all([...this.loadEagerCallbacks.map((cb) => cb()), loadEagerTask, waitForLCP()]);\n  }\n\n  private async beforeLoadLazyPromise(): Promise<void> {\n    const beforeLoadLazyTask: Promise<void> = new Promise((resolve) => resolve());\n\n    await Promise.all([...this.beforeLoadLazyCallbacks.map((cb) => cb()), beforeLoadLazyTask]);\n  }\n\n  private async loadLazyPromise(): Promise<void> {\n    // eslint-disable-next-line no-async-promise-executor, @typescript-eslint/no-misused-promises\n    const loadLazyTask: Promise<void> = new Promise(async (resolve) => {\n      try {\n        const { lazyStylesScssPath, fontsScssPath, lazyStylesCssPath } = config;\n\n        const main = document.querySelector('main') as HTMLElement;\n        await loadSections(main);\n\n        const { hash } = window.location;\n        const element = hash ? document.getElementById(hash.substring(1)) : false;\n        if (hash && element) element.scrollIntoView();\n\n        if (lazyStylesScssPath && lazyStylesCssPath) await loadCSS(lazyStylesCssPath);\n        if (fontsScssPath) await loadFonts();\n      } catch (error) {\n        DebuggerService.error('LoadLazyTask: ', error);\n      }\n      resolve();\n    });\n\n    await Promise.all([...this.loadLazyCallbacks.map((cb) => cb()), loadLazyTask]);\n  }\n\n  private async beforeLoadDelayedPromise(): Promise<void> {\n    const beforeLoadDelayedTask: Promise<void> = new Promise((resolve) => resolve());\n\n    await Promise.all([...this.beforeLoadDelayedCallbacks.map((cb) => cb()), beforeLoadDelayedTask]);\n  }\n\n  private async loadDelayedPromise(): Promise<void> {\n    const loadDelayedTask: Promise<void> = new Promise((resolve) => {\n      setTimeout(() => {\n        resolve();\n      }, 3000);\n    });\n\n    await Promise.all([...this.loadDelayedCallbacks.map((cb) => cb()), loadDelayedTask]);\n  }\n\n  private async getInitializedPromise(): Promise<void> {\n    const initializedTask: Promise<void> = new Promise((resolve) => resolve());\n\n    await Promise.all([...this.initializedCallbacks.map((cb) => cb()), initializedTask]);\n  }\n}\n\nexport default new HLX();\n","import HLX from './index';\n\ndeclare const BOILERPLATE_VERSION: string; // set in vite.config.ts\nconst BOILERPLATE_SELECTOR = '__XWALK_BOILERPLATE__';\n\nconst READY_STATES = {\n  interactive: 'interactive',\n  complete: 'complete',\n};\n\nasync function init() {\n  HLX.addBeforeEagerTask(() => {\n    const main = document.getElementsByTagName('main')[0];\n    main.setAttribute('id', 'main');\n    return Promise.resolve();\n  });\n\n  await HLX.init();\n}\n\nexport function initHLXApp() {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  globalThis[BOILERPLATE_SELECTOR] = globalThis[BOILERPLATE_SELECTOR] || {};\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  globalThis[BOILERPLATE_SELECTOR].version = BOILERPLATE_VERSION;\n\n  if (document.readyState === READY_STATES.interactive || document.readyState === READY_STATES.complete) {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    init();\n  } else {\n    document.addEventListener('readystatechange', () => {\n      const readyState = document.readyState;\n      if (readyState === READY_STATES.interactive || readyState === READY_STATES.complete) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        init();\n      }\n    });\n  }\n}\n","import './components/icon/icon';\nimport { initHLXApp } from './app/init';\n\ninitHLXApp();\n\ndeclare global {\n  interface Window {\n    hlx: {\n      RUM_MASK_URL: string;\n      codeBasePath: string;\n      RUM_MANUAL_ENHANCE: boolean;\n      lighthouse: boolean;\n    };\n  }\n}\n"],"names":["addClasses","element","classes","cssClass","toClassName","decorateTemplateAndTheme","template","getMetadata","theme","undefinedOnEmpty","value","setDocLanguage","lang","getLocation","isSidekickLibraryActive","config","loadFonts","fontsCssPath","loadCSS","error","DebuggerService","sampleRUM","checkpoint","data","timeShift","weight","id","isSelected","args","dataFromErrorObj","errData","line","reason","ck","time","pingData","rumData","url","origin","body","script","waitForLCP","lcpCandidate","resolve","showSection","section","loadSection","loadCallback","status","blocks","i","loadBlock","loadSections","parentEl","sections","setupHlxObj","mainScriptPath","scriptEl","HLX","cb","beforeLoadEagerTask","loadEagerTask","main","decorateButtons","transformSections","decorateBlocks","beforeLoadLazyTask","loadLazyTask","lazyStylesScssPath","fontsScssPath","lazyStylesCssPath","hash","beforeLoadDelayedTask","loadDelayedTask","initializedTask","HLX$1","BOILERPLATE_SELECTOR","READY_STATES","init","initHLXApp","readyState"],"mappings":"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"}